DO;
PTEST:

DECLARE
LOADJMP BYTE DATA(0C3H),
LOADADR ADDRESS DATA(.PLMTEST);

MON1: PROCEDURE(F,A) EXTERNAL;
    DECLARE F BYTE, A ADDRESS;
    END MON1;
	
MON2: PROCEDURE(F,A) BYTE EXTERNAL;
	DECLARE F BYTE, A ADDRESS;
    END MON2;
	
DECLARE SP ADDRESS;

BOOT: PROCEDURE;
    STACKPTR = SP;
    END BOOT;
	
PRINTCHAR: PROCEDURE(CHAR);
    DECLARE CHAR BYTE;
    CALL MON1(2,CHAR);
    END PRINTCHAR;

CRLF: PROCEDURE;
    CALL PRINTCHAR(13);
    CALL PRINTCHAR(10);
    END CRLF;

PRINTNIB: PROCEDURE(N);
    DECLARE N BYTE;
        IF N > 9 THEN CALL PRINTCHAR(N+'A'-10); ELSE
        CALL PRINTCHAR(N+'0');
    END PRINTNIB;
	
PRINTHEX: PROCEDURE(B);
    DECLARE B BYTE;
        CALL PRINTNIB(SHR(B,4)); CALL PRINTNIB(B AND 0FH);
    END PRINTHEX;

PRINTADDR: PROCEDURE(A);
    DECLARE A ADDRESS;
    CALL PRINTHEX(HIGH(A)); CALL PRINTHEX(LOW(A));
    END PRINTADDR;

PRINTM: PROCEDURE(A);
    DECLARE A ADDRESS;
    CALL MON1(9,A);
    END PRINTM;

PRINT: PROCEDURE(A);
    DECLARE A ADDRESS;
    /* PRINT THE STRING STARTING AT ADDRESS A UNTIL THE
    NEXT DOLLAR SIGN IS ENCOUNTERED WITH PRECEDING CRLF */
    CALL CRLF;
    CALL PRINTM(A);
    END PRINT;

PLMTEST: PROCEDURE;
	
DECLARE A(10) ADDRESS;
DECLARE (I,J) ADDRESS;
DECLARE N ADDRESS AT (.A(1));

DECLARE STACK(16) ADDRESS;
SP = STACKPTR; STACKPTR = .STACK(LENGTH(STACK));

CALL PRINT(.('HELLO$')); CALL CRLF;

START:
I = N;
J = I + N;
N = 100;

CALL BOOT;
END;
